type AddProductPayload = record {
  name : text;
  unit : text;
  description : text;
  price : float64;
};
type GetUserDataError = variant {
  FailedToAddToList;
  DidntFindUserData;
  AnonymousCaller;
};
type Order = record {
  id : nat64;
  status : OrderStatus;
  total_amount : float64;
  last_updated : nat64;
  user_phone_number : text;
  delivery_address : text;
  timestamp : nat64;
  items : vec OrderItem;
  customer_name : text;
};
type OrderError = variant {
  AccessDenied;
  CannotCancelOrder : text;
  InvalidInput : text;
  InvalidProductInOrder : nat64;
  OrderNotFound;
  UserProfileNotFound;
  StorageError : text;
};
type OrderItem = record {
  product_id : nat64;
  quantity : float64;
  price_per_unit_at_order : float64;
};
type OrderItemInput = record { product_id : nat64; quantity : float64 };
type OrderStatus = variant {
  Delivered;
  Confirmed;
  Cancelled;
  Processing;
  OutForDelivery;
  Pending;
};
type Product = record {
  id : nat64;
  name : text;
  unit : text;
  description : text;
  price : float64;
};
type Result = variant { Ok : nat64; Err : text };
type Result_1 = variant { Ok : Order; Err : OrderError };
type Result_2 = variant { Ok : nat64; Err : OrderError };
type Result_3 = variant { Ok; Err : text };
type Result_4 = variant { Ok : UserProfile; Err : text };
type Result_5 = variant { Ok : vec Order; Err : OrderError };
type Result_6 = variant { Ok : UserProfile; Err : GetUserDataError };
type Result_7 = variant { Ok : text; Err : text };
type Result_8 = variant { Ok : Product; Err : text };
type Result_9 = variant { Ok; Err : GetUserDataError };
type UserProfile = record {
  name : text;
  order_ids : vec nat64;
  address : text;
  phone_number : text;
};
service : {
  add_product_admin : (AddProductPayload) -> (Result);
  cancel_my_order : (nat64, text) -> (Result_1);
  create_order : (text, vec OrderItemInput, text) -> (Result_2);
  create_profile : (UserProfile) -> (Result_3);
  delete_profile_admin : (text) -> (Result_4);
  get_all_customers : () -> (vec UserProfile) query;
  get_all_orders : () -> (Result_5) query;
  get_my_orders : (text) -> (Result_5) query;
  get_order_details : (nat64, text) -> (Result_1) query;
  get_order_details_admin : (nat64) -> (Result_1) query;
  get_products : () -> (vec Product) query;
  get_profile_by_phone : (text) -> (Result_6) query;
  initialize_products : () -> (Result_7);
  is_dev_check : () -> (bool) query;
  update_order_status_admin : (nat64, OrderStatus) -> (Result_1);
  update_product_admin : (nat64, AddProductPayload) -> (Result_8);
  update_profile : (UserProfile) -> (Result_9);
}